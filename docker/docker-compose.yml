version: '2.1'
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "kuklyasha"
      POSTGRES_PASSWORD: "kuklyasha"
      POSTGRES_DB: "kuklyasha"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U kuklyasha" ]
      interval: 10s
      timeout: 5s
      retries: 5
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"
  configserver:
    image: ru.serji/configserver:0.0.1-snapshot
    ports:
      - "8071:8071"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "configserver"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://configserver:8071/actuator || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
  kuklyasha:
    image: ru.serji/storeserver:0.0.1-snapshot
    environment:
      PROFILE: "default"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      kafkaserver:
        condition: service_started
      configserver:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend
  notificationserver:
    image: ru.serji/notificationserver:0.0.1-snapshot
    environment:
      PROFILE: "default"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      kafkaserver:
        condition: service_started
      configserver:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - backend
  reactserver:
    image: ru.serji/react-kuklyasha:0.0.1-snapshot
    ports:
      - '3000:3000'
    stdin_open: true
    tty: true

networks:
  backend:
    driver: bridge